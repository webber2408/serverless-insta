# NOTE: update this with your service name
service: insta

custom:
  bundle:
    forceInclude:
      - mysql2

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  apiKeys:
    - instaApiKey-${self:provider.stage}
  environment:
    DB_TYPE: ${env:DB_TYPE}
    DB_CONN: ${env:DB_CONN}
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_PASS: ${env:DB_PASS}
    DB_NAME: ${env:DB_NAME}
    JWT_SECRET: ${env:JWT_SECRET}

functions:
  login:
    handler: src/auth/lambda/login.loginHandler
    events:
      - http:
          path: api/v1/auth/login
          method: POST
  register:
    handler: src/auth/lambda/register.registerHandler
    events:
      - http:
          path: api/v1/auth/register
          method: POST
  userDetail:
    handler: src/user/lambda/getUserDetails.userDetailsHandler
    events:
      - http:
          path: api/v1/users/{username}
          method: get
          # private: true
          authorizer: authorizerFunc
  updateUserDetail:
    handler: src/user/lambda/updateUserDetails.updateDetailsHandler
    events:
      - http:
          path: api/v1/profile
          method: put
          # private: true
          authorizer: authorizerFunc
  followUser:
    handler: src/follow/lambda/followUser.followUserHandler
    events:
      - http:
          path: api/v1/users/{username}/toggle-following
          method: post
          # private: true
          authorizer: authorizerFunc
  authorizerFunc:
    handler: src/auth/lambda/authorizer.handler
